name:                blackjack-simulator
version:             0.1.0.0
license:             MIT
license-file:        LICENSE
author:              Thomas Jakway
maintainer:          tjakway@nyu.edu
category:            Other
build-type:          Simple
extra-source-files:  ChangeLog.md
cabal-version:       >=1.10

Flag PostgreSQL
  description: Build with PostgreSQL instead of SQLite
  default: True

Flag Test
  description: Whether testing is enabled.
  default: True

Flag BuildFuzzyChecker
  description: Whether to build the Fuzzy Checker executable
  default: False

Library 

  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -Wall -fwarn-tabs -fwarn-incomplete-record-updates -fwarn-unused-do-bind -fwarn-incomplete-uni-patterns
  build-depends:       base, random, mtl, random-shuffle, HDBC, HDBC-sqlite3, HDBC-session, containers, convertible
  
  exposed-modules: Jakway.Blackjack.Match, Jakway.Blackjack.Util, Jakway.Blackjack.Interface.Options, Jakway.Blackjack.ProgMain, Jakway.Blackjack.Game, Jakway.Blackjack.Visibility, Jakway.Blackjack.AI, Jakway.Blackjack.CardOps, Jakway.Blackjack.IO.DatabaseCommon, Jakway.Blackjack.IO.TableNames, Jakway.Blackjack.IO.Action, Jakway.Blackjack.IO.DatabaseReads, Jakway.Blackjack.IO.RDBMS.SQLite, Jakway.Blackjack.IO.RDBMS.Postgres, Jakway.Blackjack.IO.DatabaseWrites, Jakway.Blackjack.IO.DatabaseConnection, Jakway.Blackjack.Cards, Jakway.Blackjack.Result, Jakway.Blackjack.Points, Jakway.Blackjack.Invariants.Checks, Jakway.Blackjack.Interface.Config

  if flag(test)
    CPP-Options: -DTESTING

  if flag(postgresql)
    CPP-Options: -DBUILD_POSTGRESQL
    build-depends: HDBC-postgresql, directory

Executable invariants-checker
  main-is:             InvariantsChecker.hs
  hs-source-dirs:      main

  default-language:    Haskell2010

  ghc-options:         -Wall -fwarn-tabs -fwarn-incomplete-record-updates -fwarn-unused-do-bind -fwarn-incomplete-uni-patterns

  build-depends:       base, blackjack-simulator

  if flag(test)
    CPP-Options: -DTESTING

  if flag(postgresql)
    CPP-Options: -DBUILD_POSTGRESQL
    build-depends: HDBC-postgresql, directory

Executable blackjack-simulator
  main-is:             ExeMain.hs
  hs-source-dirs:      main
  default-language:    Haskell2010

  ghc-options:         -Wall -fwarn-tabs -fwarn-incomplete-record-updates -fwarn-unused-do-bind -fwarn-incomplete-uni-patterns

  build-depends:       base, blackjack-simulator

  if flag(test)
    CPP-Options: -DTESTING

  if flag(postgresql)
    CPP-Options: -DBUILD_POSTGRESQL
    build-depends: HDBC-postgresql, directory

Executable fuzzy-checker
  main-is:           FuzzyChecker.hs
  hs-source-dirs:    main test

  default-language:    Haskell2010

  ghc-options:         -Wall -fwarn-tabs -fwarn-incomplete-record-updates -fwarn-unused-do-bind -fwarn-incomplete-uni-patterns

  build-depends:       base, blackjack-simulator, statistics, vector, random

  if flag(buildfuzzychecker)
    buildable = True
  else
    buildable = False

Test-Suite test-blackjack-simulator
  type:
    exitcode-stdio-1.0

  main-is:
    TestMain.hs

  hs-source-dirs:
    src, test

  default-language:    Haskell2010

  build-depends:       base, random, mtl, random-shuffle, HDBC, HDBC-sqlite3, HUnit, directory, HDBC-session, test-framework, test-framework-hunit, containers, convertible, MonadRandom, blackjack-simulator

  if flag(postgresql)
    CPP-Options: -DBUILD_POSTGRESQL
    build-depends: HDBC-postgresql, directory
